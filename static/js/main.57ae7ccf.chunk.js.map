{"version":3,"sources":["components/Camp.js","components/Npc.js","state/UserContext.js","components/Bag.js","components/Status.js","components/Zones.js","components/Tower.js","components/DisplayUpperDeck.js","components/Zonebattle.js","App.js","reportWebVitals.js","index.js"],"names":["Camp","className","to","Npc","Usercontext","createContext","Bag","useContext","UserContext","currentUserInfo","useState","itemDetails","setItemDetails","console","log","coins","bag","map","item","onClick","itemId","i","length","id","displayThisItem","name","amount","Status","setCurrentUserInfo","equipItemButton","setEquipItemButton","equipSpellsButton","setEquipSpellsButton","allButton","setAllButton","message","setMessage","showMessage","setShowMessage","switchButtons","fn","level","exp","vitality","defense","strength","sp","updatingCurrentUserInfo","localStorage","setItem","JSON","stringify","increaseSTR","hitpoint","increaseVIT","undefined","deck","card","cardId","updatingUserInfo","splice","setTimeout","removeCardFromDeck","rarity","element","type","cardname","ownspells","spell","foundCardInDeck","currentCard","index","push","addCardToDeck","Zones","rateD","setRateD","rateC","setRateC","rateB","setRateB","rateA","setRateA","rateS","setRateS","switchZoneRate","Tower","DisplayUpperDeck","upperDeck","selectCard","select","Zonebattle","zones","currentZone","setCurrentZone","setUpperDeck","lowerDeck","setLowerDeck","showDeck","setShowDeck","showCard","setShowCard","showCreatureCard","setShowCreatureCard","currentCardSelect","setCurrentCardSelect","showCurrentCard","setShowCurrentCard","attacking","setAttacking","turn","setTurn","turnCount","setTurnCount","win","setWin","reward","setReward","keepTrackOfText","setKeepTrackOfText","showText","setShowText","didTheCreatureDie","attack","currentZoneMonster","creatureElement","creatureHitpoint","attackPower","attackElement","strPower","Math","floor","currentCardSpliceOut","currentUpperDeck","currentLowerDeck","found","determineAttackingCard","skip","useEffect","rewards","RNG","random","percentage","cardType","cardElement","cardAttack","copyUserInfo","newCard","currentExp","currentLevel","expNeed","whatLeft","manapoint","intelligence","zoneCreatureSkill","skills","checkingForCreatureTurn","useParams","currentDeck","battle","whatisselect","App","userInfo","userState","tryToGetLocalStorage","parse","getItem","Provider","value","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57ae7ccf.chunk.js","sourcesContent":["\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../styles/camp.css\";\r\n\r\nconst Camp  = () => {\r\n\r\n    \r\n    return(\r\n        <div className=\"camp\">\r\n            <div className=\"camp__ontop\">\r\n                <div className=\"camp__ontop__show\">\r\n                    <div className=\"camp__ontop__show__border\">\r\n\r\n                    </div>\r\n                    <div className=\"camp__ontop__show__image\">\r\n\r\n                    </div>\r\n                    <div className=\"camp__ontop__show__rarity\">\r\n\r\n                    </div>\r\n                    <div className=\"camp__ontop__show__leftElement\">\r\n\r\n                    </div>\r\n                    <div className=\"camp__ontop__show__rightElement\">\r\n\r\n                    </div>\r\n                    <div className=\"camp__ontop__show__name\">\r\n                        BLESSING\r\n                    </div>\r\n                </div>\r\n                <div className=\"camp__ontop__title\">\r\n                    <div className=\"camp__ontop__title__name\">\r\n                        THE FALLEN'S TOWER\r\n                    </div>\r\n                    <div className=\"camp__ontop__title__extend\">\r\n                        STARWAY TO HAVEN\r\n                    </div>\r\n                </div>\r\n                <div className=\"camp__ontop__buttons\">\r\n                    <Link to=\"/npc\" className=\"camp__ontop__buttons__button\">\r\n                    NPC\r\n                    </Link>\r\n                    <Link to=\"/bag\" className=\"camp__ontop__buttons__button\">\r\n                    BAG\r\n                    </Link>\r\n                    <Link to=\"/status\" className=\"camp__ontop__buttons__button\">\r\n                    STATUS\r\n                    </Link>\r\n                    <Link to=\"/zones\" className=\"camp__ontop__buttons__button\">\r\n                    ZONES\r\n                    </Link>\r\n                </div>\r\n                <Link to=\"/tower\" className=\"camp__ontop__tower\">\r\n                    CLIMB - 0\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Camp;","\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../styles/npc.css\"\r\nconst Npc = () => {\r\n    return(\r\n        <div className=\"npc\">\r\n            <div className=\"npc__top\">\r\n                <div className=\"npc__top__title\">\r\n                    NPC\r\n                </div>\r\n                <Link to=\"/\" className=\"npc__top__home\">\r\n                    HOME\r\n                </Link>\r\n            </div>\r\n            <div className=\"npc__wrap\">\r\n                <div className=\"npc__wrap__card\">\r\n                    <div className=\"npc__wrap__card__background\">\r\n                        <div className=\"npc__wrap__card__background__border\">\r\n                            <div className=\"npc__wrap__card__background__border__rarity\">\r\n                            \r\n                            </div>\r\n                            <div className=\"npc__wrap__card__background__border__name\">\r\n                                Merchant\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"npc__wrap__card__button\">\r\n                        QUEST <span className=\"npc__wrap__card__button__span\">(no quest available)</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"npc__wrap__card\">\r\n                    <div className=\"npc__wrap__card__background\">\r\n                        <div className=\"npc__wrap__card__background__border\">\r\n                            <div className=\"npc__wrap__card__background__border__rarity\">\r\n                            \r\n                            </div>\r\n                            <div className=\"npc__wrap__card__background__border__name\">\r\n                                Alchemist\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"npc__wrap__card__button\">\r\n                        QUEST <span className=\"npc__wrap__card__button__span\">(no quest available)</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"npc__wrap__card\">\r\n                    <div className=\"npc__wrap__card__background\">\r\n                        <div className=\"npc__wrap__card__background__border\">\r\n                            <div className=\"npc__wrap__card__background__border__rarity\">\r\n                            \r\n                            </div>\r\n                            <div className=\"npc__wrap__card__background__border__name\">\r\n                                Blacksmith\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"npc__wrap__card__button\">\r\n                        QUEST <span className=\"npc__wrap__card__button__span\">(no quest available)</span>\r\n                    </div>\r\n                </div>\r\n             \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Npc;","\r\n\r\nimport {createContext} from \"react\";\r\n\r\nconst Usercontext = createContext([\"\", () =>{}])\r\n\r\n\r\nexport default Usercontext;","\r\n\r\nimport { useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../styles/bag.css\";\r\nimport UserContext from \"../state/UserContext.js\";\r\nconst Bag = () => {\r\n\r\n    const [currentUserInfo] = useContext(UserContext);\r\n    const [itemDetails, setItemDetails] = useState();\r\n\r\n    console.log(currentUserInfo)\r\n    function displayThisItem(itemId){\r\n        //go through bag, find the item == itemId\r\n        //give that to itemDetails\r\n        for(let i =0; i < currentUserInfo.bag.length; i++){\r\n            if(currentUserInfo.bag[i].id == itemId){\r\n                setItemDetails(currentUserInfo.bag[i]);\r\n                break;\r\n            }\r\n        }\r\n    }   \r\n\r\n    return(\r\n        <div className=\"bag\">\r\n            <div className=\"bag__title\">\r\n                <div className=\"bag__title__text\">\r\n                    BAG\r\n                </div>\r\n                <div className=\"bag__title__text\">\r\n                    COIN: {currentUserInfo.coins}\r\n                </div>\r\n                <Link to=\"/\" className=\"bag__title__home\">\r\n                    HOME\r\n                </Link>\r\n            </div>\r\n            <div className=\"bag__wrap\">\r\n                <div className=\"bag__wrap__slots\">\r\n                    {\r\n                        currentUserInfo.bag.map((item) => (\r\n                            <div key={item.id} onClick={() => displayThisItem(item.id)} className=\"bag__wrap__slots__slot\">\r\n                                <div className=\"bag__wrap__slots__slot__image\">\r\n                                    <div className=\"bag__wrap__slots__slot__image__card\">\r\n                                        <div className=\"bag__wrap__slots__slot__image__card__border\">\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                    \r\n                    \r\n                </div>\r\n                <div className=\"bag__wrap__info\">\r\n                    {\r\n                        itemDetails ? (\r\n                            <div className=\"bag__wrap__info--holder\">\r\n                                <div className=\"bag__wrap__info__image\">\r\n                                    <div className=\"bag__wrap__info__image__border\">\r\n                                        <div className=\"bag__wrap__info__image__border__card\">\r\n                                            <div className=\"bag__wrap__info__image__border__card__border\">\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"bag__wrap__info__details\">\r\n                                    <div className=\"bag__wrap__info__details__name\">\r\n                                        {itemDetails.name}\r\n                                    </div>\r\n                                    <div className=\"bag__wrap__info__details__text\">\r\n                                        Amount: {itemDetails.amount}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        \r\n                        ) : null\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Bag;","\r\nimport { useState , useContext} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../styles/status.css\";\r\n\r\nimport UserContext from \"../state/UserContext.js\";\r\n\r\nconst Status = () => {\r\n  \r\n    //const [currentUserInfo, setCurrentUserInfo] = useState(userInfo)\r\n    const [currentUserInfo, setCurrentUserInfo] = useContext(UserContext);\r\n    const [equipItemButton, setEquipItemButton] = useState(false);\r\n    const [equipSpellsButton, setEquipSpellsButton] = useState(false);\r\n    const [allButton, setAllButton] = useState(true);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [showMessage, setShowMessage] = useState(false);\r\n\r\n\r\n    function switchButtons(fn){\r\n        setEquipItemButton(false);\r\n        setEquipSpellsButton(false);\r\n        setAllButton(false);\r\n        fn(true);\r\n    }\r\n\r\n    function increaseSTR(){\r\n    \r\n        let updatingCurrentUserInfo = {...currentUserInfo};\r\n\r\n        if(updatingCurrentUserInfo.sp > 0){\r\n            updatingCurrentUserInfo.strength =  updatingCurrentUserInfo.strength  + 1;\r\n            updatingCurrentUserInfo.sp = updatingCurrentUserInfo.sp - 1;\r\n        }\r\n        ///updating here\r\n        setCurrentUserInfo(updatingCurrentUserInfo);\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(updatingCurrentUserInfo))\r\n        //updating the main\r\n        //setUserInfo(updatingCurrentUserInfo);\r\n    }\r\n    function increaseVIT(){\r\n        let updatingCurrentUserInfo = {...currentUserInfo};\r\n        if(updatingCurrentUserInfo.sp > 0){\r\n            updatingCurrentUserInfo.vitality =  updatingCurrentUserInfo.vitality  + 1;\r\n            updatingCurrentUserInfo.hitpoint = updatingCurrentUserInfo.vitality * 10;\r\n            updatingCurrentUserInfo.sp = updatingCurrentUserInfo.sp - 1;\r\n            \r\n        }\r\n        ///updating here\r\n        setCurrentUserInfo(updatingCurrentUserInfo);\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(updatingCurrentUserInfo))\r\n        //updating the main\r\n        //setUserInfo(updatingCurrentUserInfo);\r\n    }\r\n    function increaseINT(){\r\n        let updatingCurrentUserInfo = {...currentUserInfo};\r\n        if(updatingCurrentUserInfo.sp > 0){\r\n            updatingCurrentUserInfo.intelligence =  updatingCurrentUserInfo.intelligence  + 1;\r\n            updatingCurrentUserInfo.manapoint = updatingCurrentUserInfo.intelligence  * 5;\r\n            updatingCurrentUserInfo.sp = updatingCurrentUserInfo.sp - 1;\r\n        }\r\n        ///updating here\r\n        setCurrentUserInfo(updatingCurrentUserInfo);\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(updatingCurrentUserInfo))\r\n        //updating the main\r\n        //setUserInfo(updatingCurrentUserInfo);\r\n\r\n    }\r\n    //when VIT up, increase VIT and HP, * 10\r\n    //when STR up, increase STR\r\n    //when INT up, increase INT and MANA, * 5\r\n\r\n    \r\n    function addCardToDeck(cardId){\r\n        //check if deck is full\r\n        //if not, check if card is already in deck\r\n        //if yes, message already added\r\n        //if not, add it\r\n        //give message, just added\r\n        //if deck is full, if yes, then message say it's full\r\n        let updatingUserInfo = {...currentUserInfo};\r\n     \r\n        if(updatingUserInfo.deck.length == 6){\r\n            setMessage(\"Deck is full!\");\r\n            setShowMessage(true);\r\n            setTimeout(function(){\r\n              \r\n                setShowMessage(false);\r\n                \r\n            }, 1000)\r\n        }else{\r\n            //deck is not full\r\n            //check card if it's in the deck\r\n            let foundCardInDeck = false;\r\n            for(let i = 0; i < updatingUserInfo.deck.length; i++){\r\n                if(updatingUserInfo.deck[i].id == cardId){\r\n                    //found it\r\n                    //it's in the deck\r\n                    foundCardInDeck = true;\r\n                    setMessage(\"This card is already in the deck!\");\r\n                    setShowMessage(true);\r\n                    setTimeout(function(){\r\n                    \r\n                        setShowMessage(false);\r\n                       \r\n                    }, 1000)\r\n                    break;\r\n                }\r\n            }\r\n            if(foundCardInDeck == false){\r\n                //not in deck\r\n              \r\n                let currentCard = null;\r\n                for(let index = 0; index <updatingUserInfo.ownspells.length; index++){\r\n                    if(updatingUserInfo.ownspells[index].id == cardId){\r\n                        currentCard = updatingUserInfo.ownspells[index];\r\n                        break;\r\n                    }\r\n                }  \r\n                //add to deck  \r\n                updatingUserInfo.deck.push(currentCard);   \r\n                //then show messge\r\n                setMessage(\"Card added!\");\r\n                setShowMessage(true);\r\n                setTimeout(function(){\r\n                 \r\n                    setShowMessage(false);\r\n                    \r\n                }, 1000)\r\n            }\r\n        }\r\n        setCurrentUserInfo(updatingUserInfo);\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(updatingUserInfo))\r\n    }\r\n\r\n    function removeCardFromDeck(cardId){\r\n        let updatingUserInfo = {...currentUserInfo};\r\n        for(let i = 0; i < updatingUserInfo.deck.length; i++){\r\n            if(updatingUserInfo.deck[i].id == cardId){\r\n                updatingUserInfo.deck.splice(i, 1);\r\n                setMessage(\"Card removed from the deck!\");\r\n                setShowMessage(true);\r\n                setTimeout(function(){\r\n                \r\n                    setShowMessage(false);\r\n                    \r\n                }, 1000)\r\n                break;\r\n            }\r\n        }\r\n        setCurrentUserInfo(updatingUserInfo);\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(updatingUserInfo))\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"status\">\r\n            <div className=\"status__top\">\r\n                <div className=\"status__top__title\">\r\n                    STATUS\r\n                </div>\r\n                <div className=\"status__top__wrap\">\r\n                    <div className={showMessage ? \"status__top__wrap__text\" : \"status__top__wrap__text--hide\"}>\r\n                        {message}\r\n                    </div>\r\n                </div>\r\n                <Link to=\"/\" className=\"status__top__home\">\r\n                    HOME\r\n                </Link>\r\n            </div>\r\n            <div className=\"status__wrap\">\r\n                <div className=\"status__wrap__info\">\r\n                    <div className=\"status__wrap__info__card\">\r\n                        <div className=\"status__wrap__info__card__border\">\r\n                            <div className=\"status__wrap__info__card__border__rarity\">\r\n\r\n                            </div>\r\n                            <div className=\"status__wrap__info__card__border__text\">\r\n                                LEVEL: {currentUserInfo.level}\r\n                            </div>\r\n                            <div className=\"status__wrap__info__card__border__text\">\r\n                                EXP: {currentUserInfo.exp}\r\n                            </div>\r\n                            <div className=\"status__wrap__info__card__border__text\">\r\n                                HP: {currentUserInfo.vitality * 10}\r\n                            </div>\r\n                            {/*\r\n                            <div className=\"status__wrap__info__card__border__text\">\r\n                                MANA: {currentUserInfo.manapoint}\r\n                            </div>\r\n                             */}\r\n                            <div className=\"status__wrap__info__card__border__text\">\r\n                                DEF: {currentUserInfo.defense}\r\n                            </div>\r\n                            <div className=\"status__wrap__info__card__border__text\">\r\n                                STR: {currentUserInfo.strength} {currentUserInfo.sp > 0 ? <span onClick={() => increaseSTR()} className=\"status__wrap__info__card__border__text__plus\">+</span> : \"\"}\r\n                            </div>\r\n                            {/*\r\n                            <div className=\"status__wrap__info__card__border__text\">\r\n                                INT: {currentUserInfo.intelligence} {currentUserInfo.sp > 0 ? <span onClick={() => increaseINT()} className=\"status__wrap__info__card__border__text__plus\">+</span> : \"\"}\r\n                            </div>\r\n                            */}\r\n                            <div className=\"status__wrap__info__card__border__text\">\r\n                                VIT: {currentUserInfo.vitality} {currentUserInfo.sp > 0 ? <span onClick={() => increaseVIT()} className=\"status__wrap__info__card__border__text__plus\">+</span> : \"\"}\r\n                            </div>\r\n                            \r\n                            <div className=\"status__wrap__info__card__border__text\">\r\n                                SP: {currentUserInfo.sp}\r\n                            </div>\r\n                            <div className=\"status__wrap__info__card__border__text--name\">\r\n                                {currentUserInfo.name}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"status__wrap__deck\">\r\n                    <div className=\"status__wrap__deck__button\">\r\n                        <div onClick={() => switchButtons(setEquipItemButton)} className={equipItemButton == true ? \"status__wrap__deck__button__equipItem--true\":\"status__wrap__deck__button__equipItem\"}>\r\n                            EQUIP ITEMS\r\n                        </div>\r\n                        <div onClick={() => switchButtons(setEquipSpellsButton)} className={equipSpellsButton == true ? \"status__wrap__deck__button__equip--true\":\"status__wrap__deck__button__equip\"}>\r\n                            EQUIP SPELLS\r\n                        </div>\r\n                        <div onClick={() => switchButtons(setAllButton)} className={allButton == true ? \"status__wrap__deck__button__all--true\" : \"status__wrap__deck__button__all\"}>\r\n                            ALL SPELLS\r\n                        </div>  \r\n                    </div>\r\n                    {\r\n                        equipItemButton == true ? \r\n                        ( \r\n                            <div className=\"status__wrap__deck__wrap\">\r\n                                Not here yet\r\n                            </div>\r\n                        ) :  equipSpellsButton == true ? \r\n                        (\r\n                            <div className=\"status__wrap__deck__wrap\">\r\n                                <div className=\"status__wrap__deck__wrap__cards\">\r\n                                    {\r\n                                        currentUserInfo.name != undefined ? currentUserInfo.deck.length > 0 ? (\r\n                                            currentUserInfo.deck.map((card) => \r\n                                            <div key={card.id} onClick={() => removeCardFromDeck(card.id)} className=\"status__wrap__deck__wrap__cards__spell\">\r\n                                                <div className=\"status__wrap__deck__wrap__cards__spell__border\">\r\n                                                    <div className={\"status__wrap__deck__wrap__cards__spell__border__rarity status__wrap__deck__wrap__cards__spell__border__rarity--\"+card.rarity}>\r\n                                                    \r\n                                                    </div>\r\n                                                    <div className={\"status__wrap__deck__wrap__cards__spell__border__leftBox status__wrap__deck__wrap__cards__spell__border__leftBox--\"+card.element}>\r\n\r\n                                                    </div>\r\n                                                    <div className={\"status__wrap__deck__wrap__cards__spell__border__rightBox--\"+ card.type}>\r\n\r\n                                                    </div>\r\n                                                    <div className=\"status__wrap__deck__wrap__cards__spell__border__name\">\r\n                                                        {card.cardname}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            )\r\n                                            \r\n                                        ) : null : null\r\n                                    } \r\n                                </div>\r\n                            </div>\r\n                        ) : allButton == true ? \r\n                        (\r\n                            <div className=\"status__wrap__deck__wrap\">\r\n                                <div className=\"status__wrap__deck__wrap__cards\">\r\n                                    {\r\n                                       currentUserInfo.name != undefined ? currentUserInfo.ownspells.length > 0 ? (\r\n                                            currentUserInfo.ownspells.map((spell) => \r\n                                                <div key={spell.id} onClick={() => addCardToDeck(spell.id)} className=\"status__wrap__deck__wrap__cards__spell\">\r\n                                                    <div className=\"status__wrap__deck__wrap__cards__spell__border\">\r\n                                                        <div className={\"status__wrap__deck__wrap__cards__spell__border__rarity status__wrap__deck__wrap__cards__spell__border__rarity--\" + spell.rarity}>\r\n                                                        \r\n                                                        </div>\r\n                                                        <div className={\"status__wrap__deck__wrap__cards__spell__border__leftBox status__wrap__deck__wrap__cards__spell__border__leftBox--\" + spell.element}>\r\n\r\n                                                        </div>\r\n                                                        <div className={\"status__wrap__deck__wrap__cards__spell__border__rightBox--\" + spell.type}>\r\n\r\n                                                        </div>\r\n                                                        <div className=\"status__wrap__deck__wrap__cards__spell__border__name\">\r\n                                                            {spell.cardname}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        ): null :null\r\n                                    }\r\n                                    \r\n                                    \r\n                                </div>\r\n                            </div>\r\n                        ) : null\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Status;","\r\n\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../styles/zones.css\";\r\n\r\nconst Zones = () => {\r\n\r\n    const [rateD, setRateD] = useState(true);\r\n    const [rateC, setRateC] = useState(false);\r\n    const [rateB, setRateB] = useState(false);\r\n    const [rateA, setRateA] = useState(false);\r\n    const [rateS, setRateS] = useState(false);\r\n\r\n    function switchZoneRate(fn){\r\n        setRateD(false);\r\n        setRateC(false);\r\n        setRateB(false);\r\n        setRateA(false);\r\n        setRateS(false);\r\n\r\n        fn(true);\r\n    }\r\n\r\n    return(\r\n        <div className=\"zones\">\r\n            <div className=\"zones__top\">\r\n                <div className=\"zones__top__title\">\r\n                    ZONES\r\n                </div>\r\n                <Link to=\"/\" className=\"zones__top__home\">\r\n                    HOME\r\n                </Link>\r\n            </div>\r\n            <div className=\"zones__wrap\">\r\n                <div className=\"zones__wrap__nav\">\r\n                    <div onClick={() => switchZoneRate(setRateD)} className={rateD == true ? \"zones__wrap__nav__button zones__wrap__nav__button--active\":\"zones__wrap__nav__button\"}>\r\n                        <div className=\"zones__wrap__nav__button__rarity--white\">\r\n                       \r\n                        </div>\r\n                        <div className=\"zones__wrap__nav__button__text\">\r\n                            RATED: D\r\n                        </div>\r\n                    </div>\r\n                    <div onClick={() => switchZoneRate(setRateC)} className={rateC == true ? \"zones__wrap__nav__button zones__wrap__nav__button--active\":\"zones__wrap__nav__button\"}>\r\n                        <div className=\"zones__wrap__nav__button__rarity--blue\">\r\n                       \r\n                        </div>\r\n                        <div className=\"zones__wrap__nav__button__text\">\r\n                            RATED: C\r\n                        </div>\r\n                    </div>\r\n                    <div onClick={() => switchZoneRate(setRateB)} className={rateB == true ? \"zones__wrap__nav__button zones__wrap__nav__button--active\":\"zones__wrap__nav__button\"}>\r\n                        <div className=\"zones__wrap__nav__button__rarity--green\">\r\n                        \r\n                        </div>\r\n                        <div className=\"zones__wrap__nav__button__text\">\r\n                            RATED: B\r\n                        </div>\r\n                    </div>\r\n                    <div onClick={() => switchZoneRate(setRateA)} className={rateA == true ? \"zones__wrap__nav__button zones__wrap__nav__button--active\":\"zones__wrap__nav__button\"}>\r\n                        <div className=\"zones__wrap__nav__button__rarity--gold\">\r\n                        \r\n                        </div>\r\n                        <div className=\"zones__wrap__nav__button__text\">\r\n                            RATED:A\r\n                        </div>\r\n                    </div>\r\n                    <div onClick={() => switchZoneRate(setRateS)} className={rateS == true ? \"zones__wrap__nav__button zones__wrap__nav__button--active\":\"zones__wrap__nav__button\"}>\r\n                        <div className=\"zones__wrap__nav__button__rarity--crimson\">\r\n                        \r\n                        </div>\r\n                        <div className=\"zones__wrap__nav__button__text\">\r\n                            RATED: S\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    rateD == true ? \r\n                    (\r\n                        <div className=\"zones__wrap__cards\">\r\n                            <div className=\"zones__wrap__cards__zone\">\r\n                                <div className=\"zones__wrap__cards__zone__card\">\r\n                                    <div className=\"zones__wrap__cards__zone__card__border\">\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__rarity--white\">\r\n                                        \r\n                                        </div>\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__text\">\r\n                                        \r\n                                        </div>\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__name\">\r\n                                            HAUNTING VALLEY\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <Link to=\"zones/1\" className=\"zones__wrap__cards__zone__button\">\r\n                                    CHALLENGE\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"zones__wrap__cards__zone\">\r\n                                <div className=\"zones__wrap__cards__zone__card\">\r\n                                    <div className=\"zones__wrap__cards__zone__card__border\">\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__rarity--white\">\r\n                                        \r\n                                        </div>\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__text\">\r\n                                        \r\n                                        </div>\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__name\">\r\n                                            WOLF'S DEN\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <Link to=\"zones/2\" className=\"zones__wrap__cards__zone__button\">\r\n                                    CHALLENGE\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"zones__wrap__cards__zone\">\r\n                                <div className=\"zones__wrap__cards__zone__card\">\r\n                                    <div className=\"zones__wrap__cards__zone__card__border\">\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__rarity--white\">\r\n                                        \r\n                                        </div>\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__text\">\r\n                                        \r\n                                        </div>\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__name\">\r\n                                            IRON TOOTH BOAR\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <Link to=\"zones/3\" className=\"zones__wrap__cards__zone__button\">\r\n                                    CHALLENGE\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    ) \r\n                    : rateC == true ?\r\n                    (\r\n                        <div className=\"zones__wrap__cards\">\r\n                            <div className=\"zones__wrap__cards__zone\">\r\n                                <div className=\"zones__wrap__cards__zone__card\">\r\n                                    <div className=\"zones__wrap__cards__zone__card__border\">\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__rarity--blue\">\r\n                                        \r\n                                        </div>\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__text\">\r\n                                        \r\n                                        </div>\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__name\">\r\n                                            BLOSSOM VALLEY\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <Link to=\"zones/4\" className=\"zones__wrap__cards__zone__button\">\r\n                                    CHALLENGE\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"zones__wrap__cards__zone\">\r\n                                <div className=\"zones__wrap__cards__zone__card\">\r\n                                    <div className=\"zones__wrap__cards__zone__card__border\">\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__rarity--blue\">\r\n                                        \r\n                                        </div>\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__text\">\r\n                                        \r\n                                        </div>\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__name\">\r\n                                           SENTIMENT HILL\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <Link to=\"zones/5\" className=\"zones__wrap__cards__zone__button\">\r\n                                    CHALLENGE\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"zones__wrap__cards__zone\">\r\n                                <div className=\"zones__wrap__cards__zone__card\">\r\n                                    <div className=\"zones__wrap__cards__zone__card__border\">\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__rarity--blue\">\r\n                                        \r\n                                        </div>\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__text\">\r\n                                        \r\n                                        </div>\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__name\">\r\n                                            MEZ RIVER \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <Link to=\"zones/6\" className=\"zones__wrap__cards__zone__button\">\r\n                                    CHALLENGE\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    ) : rateB == true ? \r\n                    (\r\n                        <div className=\"zones__wrap__cards\">\r\n                            <div className=\"zones__wrap__cards__zone\">\r\n                                <div className=\"zones__wrap__cards__zone__card\">\r\n                                    <div className=\"zones__wrap__cards__zone__card__border\">\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__rarity--green\">\r\n                                        \r\n                                        </div>\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__text\">\r\n                                        \r\n                                        </div>\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__name\">\r\n                                            WITCH'S HUNT\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <Link to=\"zones/7\" className=\"zones__wrap__cards__zone__button\">\r\n                                    CHALLENGE\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"zones__wrap__cards__zone\">\r\n                                <div className=\"zones__wrap__cards__zone__card\">\r\n                                    <div className=\"zones__wrap__cards__zone__card__border\">\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__rarity--green\">\r\n                                        \r\n                                        </div>\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__text\">\r\n                                        \r\n                                        </div>\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__name\">\r\n                                            THE FOREST\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <Link to=\"zones/8\" className=\"zones__wrap__cards__zone__button\">\r\n                                    CHALLENGE\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"zones__wrap__cards__zone\">\r\n                                <div className=\"zones__wrap__cards__zone__card\">\r\n                                    <div className=\"zones__wrap__cards__zone__card__border\">\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__rarity--green\">\r\n                                        \r\n                                        </div>\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__text\">\r\n                                        \r\n                                        </div>\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__name\">\r\n                                            ROUGE'S HIDEOUT\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <Link to=\"zones/9\" className=\"zones__wrap__cards__zone__button\">\r\n                                    CHALLENGE\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    ):  null}\r\n                    {/*\r\n                        rateA == true ? \r\n                    (\r\n                        <div className=\"zones__wrap__cards\">\r\n                            <div className=\"zones__wrap__cards__zone\">\r\n                                <div className=\"zones__wrap__cards__zone__card\">\r\n                                    <div className=\"zones__wrap__cards__zone__card__border\">\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__rarity--gold\">\r\n                                        \r\n                                        </div>\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__text\">\r\n                                        \r\n                                        </div>\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__name\">\r\n                                            WANDERING TING\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <Link to=\"zones/10\" className=\"zones__wrap__cards__zone__button\">\r\n                                    CHALLENGE\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"zones__wrap__cards__zone\">\r\n                                <div className=\"zones__wrap__cards__zone__card\">\r\n                                    <div className=\"zones__wrap__cards__zone__card__border\">\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__rarity--gold\">\r\n                                        \r\n                                        </div>\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__text\">\r\n                                        \r\n                                        </div>\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__name\">\r\n                                            FALLEN MAGE\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <Link to=\"zones/11\" className=\"zones__wrap__cards__zone__button\">\r\n                                    CHALLENGE\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"zones__wrap__cards__zone\">\r\n                                <div className=\"zones__wrap__cards__zone__card\">\r\n                                    <div className=\"zones__wrap__cards__zone__card__border\">\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__rarity--gold\">\r\n                                        \r\n                                        </div>\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__text\">\r\n                                        \r\n                                        </div>\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__name\">\r\n                                            THREE EYES MYSTIC\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <Link to=\"zones/12\" className=\"zones__wrap__cards__zone__button\">\r\n                                    CHALLENGE\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    ): rateS == true ? \r\n                    (\r\n                        <div className=\"zones__wrap__cards\">\r\n                            <div className=\"zones__wrap__cards__zone\">\r\n                                <div className=\"zones__wrap__cards__zone__card\">\r\n                                    <div className=\"zones__wrap__cards__zone__card__border\">\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__rarity--crimson\">\r\n                                        \r\n                                        </div>\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__text\">\r\n                                        \r\n                                        </div>\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__name\">\r\n                                            WING SERPENT\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <Link to=\"zones/13\" className=\"zones__wrap__cards__zone__button\">\r\n                                    CHALLENGE\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"zones__wrap__cards__zone\">\r\n                                <div className=\"zones__wrap__cards__zone__card\">\r\n                                    <div className=\"zones__wrap__cards__zone__card__border\">\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__rarity--crimson\">\r\n                                        \r\n                                        </div>\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__text\">\r\n                                        \r\n                                        </div>\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__name\">\r\n                                            EAGLE'S NEST\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <Link to=\"zones/14\" className=\"zones__wrap__cards__zone__button\">\r\n                                    CHALLENGE\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"zones__wrap__cards__zone\">\r\n                                <div className=\"zones__wrap__cards__zone__card\">\r\n                                    <div className=\"zones__wrap__cards__zone__card__border\">\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__rarity--crimson\">\r\n                                            \r\n                                        </div>\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__text\">\r\n\r\n                                        </div>\r\n                                        <div className=\"zones__wrap__cards__zone__card__border__name\">\r\n                                            MISTY FOREST\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <Link to=\"zones/15\" className=\"zones__wrap__cards__zone__button\">\r\n                                    CHALLENGE\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    ): null\r\n                */}\r\n                \r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Zones;","\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../styles/tower.css\"\r\n\r\nconst Tower = () => {\r\n    return(\r\n        <div className=\"tower\">\r\n            <div className=\"tower__top\">\r\n                <div className=\"tower__top__title\">\r\n                    TOWER\r\n                </div>\r\n                <Link to=\"/\" className=\"tower__top__home\">\r\n                    HOME\r\n                </Link>\r\n            </div>\r\n            <div className=\"tower__wrap\">\r\n                <div className=\"tower__wrap__cards\">\r\n                    <div className=\"tower__wrap__cards__floor\">\r\n                        <div className=\"tower__wrap__cards__floor__card\">\r\n                            <div className=\"tower__wrap__cards__floor__card__border\">\r\n                                <div className=\"tower__wrap__cards__floor__card__border__name\">\r\n                                   FOUR ARMS CENTUAR\r\n                                </div>\r\n                                <div className=\"tower__wrap__cards__floor__card__border__floor tower__wrap__cards__floor__card__border__floor--activated\">\r\n                                  1ST FLOOR\r\n                                </div>\r\n                                <div className=\"tower__wrap__cards__floor__card__border__leftBox tower__wrap__cards__floor__card__border__leftBox--water\">\r\n                                \r\n                                </div>\r\n                                <div className=\"tower__wrap__cards__floor__card__border__rightBox tower__wrap__cards__floor__card__border__rightBox--diamond\">\r\n                                \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"tower__wrap__cards__floor__button\">\r\n                            CHALLENGE\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tower__wrap__cards__floor\">\r\n                        <div className=\"tower__wrap__cards__floor__card\">\r\n                            <div className=\"tower__wrap__cards__floor__card__border\">\r\n                                <div className=\"tower__wrap__cards__floor__card__border__name\">\r\n                                   NINE TAILS FOX\r\n                                </div>\r\n                                <div className=\"tower__wrap__cards__floor__card__border__floor tower__wrap__cards__floor__card__border__floor--deactivated\">\r\n                                  2ND FLOOR\r\n                                </div>\r\n                                <div className=\"tower__wrap__cards__floor__card__border__leftBox tower__wrap__cards__floor__card__border__leftBox--water\">\r\n                                \r\n                                </div>\r\n                                <div className=\"tower__wrap__cards__floor__card__border__rightBox tower__wrap__cards__floor__card__border__rightBox--diamond\">\r\n                                \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"tower__wrap__cards__floor__button\">\r\n                            CHALLENGE\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tower__wrap__cards__floor\">\r\n                        <div className=\"tower__wrap__cards__floor__card\">\r\n                            <div className=\"tower__wrap__cards__floor__card__border\">\r\n                                <div className=\"tower__wrap__cards__floor__card__border__name\">\r\n                                   PURPLE SNAKE\r\n                                </div>\r\n                                <div className=\"tower__wrap__cards__floor__card__border__floor tower__wrap__cards__floor__card__border__floor--deactivated\">\r\n                                  3RD FLOOR\r\n                                </div>\r\n                                <div className=\"tower__wrap__cards__floor__card__border__leftBox tower__wrap__cards__floor__card__border__leftBox--water\">\r\n                                \r\n                                </div>\r\n                                <div className=\"tower__wrap__cards__floor__card__border__rightBox tower__wrap__cards__floor__card__border__rightBox--diamond\">\r\n                                \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"tower__wrap__cards__floor__button\">\r\n                            CHALLENGE\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tower__wrap__cards__floor\">\r\n                        <div className=\"tower__wrap__cards__floor__card\">\r\n                            <div className=\"tower__wrap__cards__floor__card__border\">\r\n                                <div className=\"tower__wrap__cards__floor__card__border__name\">\r\n                                   GOLDEN LION\r\n                                </div>\r\n                                <div className=\"tower__wrap__cards__floor__card__border__floor tower__wrap__cards__floor__card__border__floor--deactivated\">\r\n                                  4TH FLOOR\r\n                                </div>\r\n                                <div className=\"tower__wrap__cards__floor__card__border__leftBox tower__wrap__cards__floor__card__border__leftBox--water\">\r\n                                \r\n                                </div>\r\n                                <div className=\"tower__wrap__cards__floor__card__border__rightBox tower__wrap__cards__floor__card__border__rightBox--diamond\">\r\n                                \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"tower__wrap__cards__floor__button\">\r\n                            CHALLENGE\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tower__wrap__cards__floor\">\r\n                        <div className=\"tower__wrap__cards__floor__card\">\r\n                            <div className=\"tower__wrap__cards__floor__card__border\">\r\n                                <div className=\"tower__wrap__cards__floor__card__border__name\">\r\n                                   CORRUPTED MAGE\r\n                                </div>\r\n                                <div className=\"tower__wrap__cards__floor__card__border__floor tower__wrap__cards__floor__card__border__floor--deactivated\">\r\n                                  5TH FLOOR\r\n                                </div>\r\n                                <div className=\"tower__wrap__cards__floor__card__border__leftBox tower__wrap__cards__floor__card__border__leftBox--water\">\r\n                                \r\n                                </div>\r\n                                <div className=\"tower__wrap__cards__floor__card__border__rightBox tower__wrap__cards__floor__card__border__rightBox--diamond\">\r\n                                \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"tower__wrap__cards__floor__button\">\r\n                            CHALLENGE\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tower__wrap__cards__floor\">\r\n                        <div className=\"tower__wrap__cards__floor__card\">\r\n                            <div className=\"tower__wrap__cards__floor__card__border\">\r\n                                <div className=\"tower__wrap__cards__floor__card__border__name\">\r\n                                    NINE WINGS PHEONIX \r\n                                </div>\r\n                                <div className=\"tower__wrap__cards__floor__card__border__floor tower__wrap__cards__floor__card__border__floor--deactivated\">\r\n                                    6TH FLOOR\r\n                                </div>\r\n                                <div className=\"tower__wrap__cards__floor__card__border__leftBox tower__wrap__cards__floor__card__border__leftBox--water\">\r\n                                \r\n                                </div>\r\n                                <div className=\"tower__wrap__cards__floor__card__border__rightBox tower__wrap__cards__floor__card__border__rightBox--diamond\">\r\n                                \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"tower__wrap__cards__floor__button\">\r\n                            CHALLENGE\r\n                        </div>\r\n                    </div>\r\n                   \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tower;","\r\n\r\nconst DisplayUpperDeck = ({upperDeck, selectCard}) => {\r\n    return(\r\n        <div className=\"zonebattle__wrap__top\">\r\n            {\r\n                upperDeck.length > 0 ? (\r\n                    upperDeck.map((card) => \r\n                        <div key={card.id} onClick={ () => selectCard(card.id, \"upper\")} className={card.select == true ? \"zonebattle__wrap__top__card zonebattle__wrap__top__card--select\":\"zonebattle__wrap__top__card\"}>\r\n                            <div className=\"zonebattle__wrap__top__card__border\">\r\n                                <div className=\"zonebattle__wrap__top__card__border__rarity rarity--blue\">\r\n                                \r\n                                </div>\r\n                                <div className={\"zonebattle__wrap__top__card__border__leftBox box--\"+card.element}>\r\n                                \r\n                                </div>\r\n                                <div className={\"zonebattle__wrap__top__card__border__rightBox box--\"+card.type}>\r\n                                \r\n                                </div>\r\n                                <div className=\"zonebattle__wrap__top__card__border__name\">\r\n                                    {card.cardname}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                ) : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayUpperDeck;","\r\n\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport \"../styles/zonebattle.css\"\r\n\r\nimport DisplayUpperDeck from \"./DisplayUpperDeck\"\r\n\r\nimport UserContext from \"../state/UserContext.js\";\r\n\r\nconst Zonebattle = ({zones}) => {\r\n\r\n    const [currentUserInfo, setCurrentUserInfo] = useContext(UserContext);\r\n    const [currentZone, setCurrentZone] = useState([])\r\n    const [upperDeck, setUpperDeck] = useState([])\r\n    const [lowerDeck, setLowerDeck] = useState([])\r\n    const [showDeck, setShowDeck] = useState(false);\r\n\r\n    const [level, setLevel] = useState([\r\n        {\r\n            \"level\" : 1,\r\n            \"expNeed\": 120,\r\n        },\r\n        {\r\n            \"level\" : 2,\r\n            \"expNeed\": 240,\r\n        },\r\n        {\r\n            \"level\" : 3,\r\n            \"expNeed\": 480,\r\n        },\r\n        {\r\n            \"level\" : 4,\r\n            \"expNeed\": 960,\r\n        },\r\n        {\r\n            \"level\" : 5,\r\n            \"expNeed\": 1920,\r\n        },\r\n        {\r\n            \"level\" : 6,\r\n            \"expNeed\": 3840,\r\n        },\r\n        {\r\n            \"level\" : 7,\r\n            \"expNeed\": 7680,\r\n        },\r\n        {\r\n            \"level\" : 8,\r\n            \"expNeed\": 15360,\r\n        },\r\n        {\r\n            \"level\" : 9,\r\n            \"expNeed\": 30720,\r\n        },\r\n        {\r\n            \"level\" : 10,\r\n            \"expNeed\": 61440,\r\n        },\r\n        {\r\n            \"level\" : 11,\r\n            \"expNeed\": 122880,\r\n        },\r\n        {\r\n            \"level\" : 12,\r\n            \"expNeed\": 245760,\r\n        },\r\n        {\r\n            \"level\" : 13,\r\n            \"expNeed\": 491520,\r\n        },\r\n        {\r\n            \"level\" : 14,\r\n            \"expNeed\": 983040,\r\n        },\r\n        {\r\n            \"level\" : 15,\r\n            \"expNeed\": 1966080,\r\n        },\r\n        {\r\n            \"level\" : 16,\r\n            \"expNeed\": 3932160,\r\n        },\r\n        {\r\n            \"level\" : 17,\r\n            \"expNeed\": 7864320,\r\n        },\r\n        {\r\n            \"level\" : 18,\r\n            \"expNeed\": 15728640,\r\n        },\r\n        {\r\n            \"level\" : 19,\r\n            \"expNeed\": 31457280,\r\n        },\r\n        {\r\n            \"level\" : 20,\r\n            \"expNeed\": 62914560,\r\n        }\r\n    ])\r\n\r\n    const [showCard, setShowCard] = useState(false);\r\n    const [showCreatureCard, setShowCreatureCard] = useState(false);\r\n\r\n    const [userStatusEffect, setUserStatusEffect] = useState([]);\r\n    const [creatureStatusEffect, setCreatureStatusEffect] = useState([]);\r\n    const [currentCardSelect, setCurrentCardSelect] = useState();\r\n    const [showCurrentCard, setShowCurrentCard] = useState([]);\r\n\r\n    //what turn, who turn is it\r\n    //in attacking action\r\n    const [attacking, setAttacking] = useState(false);\r\n    const [turn, setTurn] = useState(\"user\");\r\n    const [turnCount, setTurnCount] = useState(1);\r\n\r\n    const [win, setWin] = useState(false);\r\n    const [reward, setReward] = useState([]);\r\n\r\n    const [keepTrackOfText, setKeepTrackOfText] = useState();\r\n    const [showText, setShowText] = useState(false);\r\n\r\n    let didTheCreatureDie = false;\r\n    let isItMonsterTurn = false;\r\n\r\n\r\n    function checkingForCreatureTurn(){\r\n        let zoneCreatureSkill = currentZone.skills[0];\r\n        //console.log(currentZone.hitpoint)\r\n        //console.log(\"creature:\", didTheCreatureDie);\r\n        if(didTheCreatureDie == false){\r\n            //console.log(\"creature checking attack!\")\r\n            setAttacking(true);\r\n            setShowCreatureCard(true);\r\n            setCurrentCardSelect(zoneCreatureSkill);\r\n            //set attacking to true\r\n            //showCreatureCard\r\n            //currentCardSelect\r\n            //console.log(\"zoneSkill:\", zoneCreatureSkill)\r\n            //user hp\r\n            let updatingUserInfo = {...currentUserInfo};\r\n            \r\n            setTimeout(function(){\r\n                //then do damage\r\n             \r\n                updatingUserInfo.hitpoint = Math.floor(updatingUserInfo.hitpoint - zoneCreatureSkill.attackPower);\r\n                setCurrentUserInfo(updatingUserInfo);\r\n                setKeepTrackOfText(\"Monster use \" + zoneCreatureSkill.name + \" and did \" + zoneCreatureSkill.attackPower + \" damages.\")\r\n                setShowText(true);\r\n                //localStorage.setItem(\"userInfo\", JSON.stringify((updatingUserInfo)))\r\n            }, 500)\r\n            //then clear it all back to nothing, hideshowCreatureCard\r\n            setTimeout(function(){\r\n                //clear\r\n                setAttacking(false);\r\n                setTurn(\"user\");\r\n                setShowCreatureCard(false);\r\n                setCurrentCardSelect()\r\n                let currentTurnCount = turnCount + 1;\r\n                setTurnCount(currentTurnCount)\r\n                isItMonsterTurn = false;\r\n                setKeepTrackOfText(\"\")\r\n                setShowText(false);\r\n            }, 2000)\r\n        }else{\r\n            console.log(\"check!\")\r\n            setWin(true);\r\n        }  \r\n    }\r\n  \r\n\r\n    useEffect(() => {\r\n        if(currentZone.hitpoint <= 0){\r\n            //get reward\r\n            let rewards = [];\r\n            let RNG = Math.floor(Math.random() * 100);\r\n         \r\n            let id = Math.floor(Math.random() * 1000000);\r\n            let item = {\r\n                \"id\": id,\r\n                \"name\" : \"\",\r\n                \"type\": \"\",\r\n                \"amount\": 0,\r\n            }\r\n            //console.log(\"RNG:\", RNG);\r\n            //look through reward for the one that is 1% or less\r\n            for(let i = 0; i < currentZone.rewards.length; i++){\r\n                if(currentZone.rewards[i].percentage >= RNG){\r\n                    item.name = currentZone.rewards[i].name;\r\n                    item.type = currentZone.rewards[i].type;\r\n                    item.amount = currentZone.rewards[i].amount;\r\n                    if(currentZone.rewards[i].type == \"card\"){\r\n                        item[\"cardType\"] = currentZone.rewards[i].cardType;\r\n                        item[\"rarity\"] = currentZone.rewards[i].rarity;\r\n                        item[\"cardElement\"] = currentZone.rewards[i].cardElement;\r\n                        item[\"cardAttack\"] = currentZone.rewards[i].cardAttack;\r\n                    }\r\n                    rewards.push(item);\r\n                    //reset\r\n                    item = {\r\n                        \"id\": id,\r\n                        \"name\" : \"\",\r\n                        \"type\": \"\",\r\n                        \"amount\": 0,\r\n                        \"cardType\": \"\",\r\n                        \"rarity\": \"\",\r\n                        \"cardElement\": \"\",\r\n                        \"cardAttack\": \"\"\r\n                    }\r\n                }\r\n            }\r\n            setReward(rewards);\r\n            //give it to user bag\r\n            /*\r\n                {\r\n                    \"id\": 102,\r\n                    \"cardname\": \"RAPID FIREBALL\",\r\n                    \"attack\": 4.8,\r\n                    \"rarity\": \"white\",\r\n                    \"effect\": [],\r\n                    \"element\": \"fire\",\r\n                    \"type\": \"attack\"\r\n                } \r\n            */\r\n            let copyUserInfo = {...currentUserInfo};\r\n            for(let i = 0; i < rewards.length; i++){\r\n               //currency, go to coin\r\n\r\n               //item\r\n               //go to bag\r\n        \r\n               //card\r\n               //go to spell\r\n                if(rewards[i].type == \"currency\"){\r\n                    copyUserInfo.coins  =  copyUserInfo.coins + rewards[i].amount;\r\n                }else if (rewards[i].type == \"item\"){\r\n                    copyUserInfo.bag.push(rewards[i]);\r\n                }else if (rewards[i].type == \"card\"){\r\n                    let id = Math.floor(Math.random() * 1000000);\r\n                    let newCard = {\r\n                        \"id\": id,\r\n                        \"cardname\": rewards[i].name,\r\n                        \"attack\": rewards[i].cardAttack,\r\n                        \"rarity\": rewards[i].rarity,\r\n                        \"effect\": [],\r\n                        \"element\":  rewards[i].cardElement,\r\n                        \"type\":  rewards[i].cardType\r\n                    }\r\n                    \r\n                    copyUserInfo.ownspells.push(newCard);\r\n                }else if (rewards[i].type == \"exp\"){\r\n                    //give exp to user\r\n                    let currentExp = copyUserInfo.exp;\r\n                    let currentLevel = copyUserInfo.level;\r\n\r\n                    for(let index = 0; index < level.length; index++){\r\n                      \r\n                        if(level[index].level == currentLevel){\r\n                            if (currentExp + rewards[i].amount >= level[index].expNeed){\r\n                                //need to level up\r\n                                let whatLeft = (currentExp + rewards[i].amount) -  level[index].expNeed;\r\n                                copyUserInfo.level = currentLevel + 1;\r\n                                copyUserInfo.exp = whatLeft;\r\n                                copyUserInfo.sp =  copyUserInfo.sp  + 5;\r\n                            }else {\r\n                                //only need to increase the exp\r\n                                copyUserInfo.exp = copyUserInfo.exp + rewards[i].amount;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }\r\n               \r\n            }   \r\n\r\n            //update HP and MP back to normal\r\n            copyUserInfo.hitpoint = copyUserInfo.vitality * 10;\r\n            copyUserInfo.manapoint = copyUserInfo.intelligence * 5;\r\n\r\n         \r\n            //setUserInfo(copyUserInfo);\r\n            setCurrentUserInfo(copyUserInfo);\r\n      \r\n            localStorage.setItem(\"userInfo\", JSON.stringify(copyUserInfo))\r\n            setShowCreatureCard(false);\r\n            setWin(true);\r\n            didTheCreatureDie = true;\r\n            console.log(\"creature:\", didTheCreatureDie);\r\n        }else{\r\n            setWin(false);\r\n        }\r\n  \r\n    }, [currentZone.hitpoint])\r\n\r\n    useEffect(() => {\r\n        //console.log(\"checking mon:\", isItMonsterTurn)\r\n        if(turn==\"creature\"){\r\n            if(currentZone.hitpoint > 0){\r\n                checkingForCreatureTurn();\r\n            }\r\n        }\r\n\r\n    }, [turn])\r\n\r\n    function selectCard(id, deck){\r\n        let whatisselect = {...currentCardSelect};\r\n        if(deck == \"upper\"){\r\n            //make sure that is no card select yet\r\n            if(whatisselect.id == undefined){\r\n                //console.log(\"true\")\r\n                for(let i = 0 ; i < upperDeck.length; i++){\r\n                    if(upperDeck[i].id == id){\r\n                        if(upperDeck[i].select){\r\n                            upperDeck[i].select = false;\r\n                      \r\n                            if(whatisselect.id != undefined){\r\n                                whatisselect.splice(0,1);\r\n                            }\r\n                            setCurrentCardSelect(whatisselect);\r\n                            \r\n                            break;\r\n                            \r\n                        }else{\r\n                    \r\n                            upperDeck[i].select = true;\r\n                            whatisselect = upperDeck[i];\r\n                            setCurrentCardSelect(whatisselect);\r\n                            break;\r\n                        }\r\n                    \r\n                    }\r\n                }\r\n            }else if (whatisselect.id != undefined){\r\n                for(let i = 0 ; i < upperDeck.length; i++){\r\n                    if(upperDeck[i].id == id){\r\n                        if(upperDeck[i].select){\r\n                            upperDeck[i].select = false;\r\n                            setCurrentCardSelect({});\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    function determineAttackingCard(){\r\n        let currentCard = {...currentCardSelect}\r\n        //console.log(currentZone)\r\n        let currentZoneMonster = {...currentZone};\r\n        //console.log(\"currentCard:\", currentCard)\r\n        setTimeout(function(){\r\n            setShowCard(true);\r\n            setShowCurrentCard(currentCard);\r\n            //do damage\r\n            if(currentCard.type == \"attack\"){\r\n                //attack\r\n                let creatureElement = currentZoneMonster.element;\r\n                let creatureHitpoint = currentZoneMonster.hitpoint;\r\n\r\n                let attackPower = currentCard.attack;\r\n                let attackElement = currentCard.element;\r\n                \r\n                let strPower= attackPower * currentUserInfo.strength;\r\n\r\n\r\n                if(attackElement == \"fire\" && creatureElement == \"water\"){\r\n                    //lose benefit\r\n                    strPower = (attackPower*(.90)) * currentUserInfo.strength;\r\n                    currentZoneMonster.hitpoint = Math.floor(creatureHitpoint - strPower);\r\n\r\n                    if(currentZoneMonster.hitpoint <= 0){\r\n                        currentZoneMonster.hitpoint = 0;\r\n                    }\r\n                }else if (attackElement == \"fire\" && creatureElement == \"wind\"){\r\n                    //win benefit\r\n                    strPower = (attackPower*(1.10)) * currentUserInfo.strength;\r\n                    currentZoneMonster.hitpoint = Math.floor(creatureHitpoint - strPower);\r\n\r\n                    if(currentZoneMonster.hitpoint <= 0){\r\n                        currentZoneMonster.hitpoint = 0;\r\n                    }\r\n                }else if (attackElement == \"water\" && creatureElement == \"fire\"){\r\n                    //win benefit\r\n                    strPower = (attackPower*(1.10)) * currentUserInfo.strength;\r\n                    currentZoneMonster.hitpoint = Math.floor(creatureHitpoint - strPower);\r\n\r\n                    if(currentZoneMonster.hitpoint <= 0){\r\n                        currentZoneMonster.hitpoint = 0;\r\n                    }\r\n                }else if (attackElement == \"water\" && creatureElement == \"earth\"){\r\n                    //lose benefit\r\n                    strPower = (attackPower*(.90)) * currentUserInfo.strength;\r\n                    currentZoneMonster.hitpoint = Math.floor(creatureHitpoint - strPower);\r\n\r\n                    if(currentZoneMonster.hitpoint <= 0){\r\n                        currentZoneMonster.hitpoint = 0;\r\n                    }\r\n                }else if (attackElement == \"wind\" && creatureElement == \"earth\"){\r\n                    //win benefit\r\n                    strPower = (attackPower*(1.10)) * currentUserInfo.strength;\r\n                    currentZoneMonster.hitpoint = Math.floor(creatureHitpoint - strPower);\r\n\r\n                    if(currentZoneMonster.hitpoint <= 0){\r\n                        currentZoneMonster.hitpoint = 0;\r\n                    }\r\n                }else if (attackElement == \"wind\" && creatureElement == \"fire\"){\r\n                    //lose benfit\r\n                    strPower = (attackPower*(.90)) * currentUserInfo.strength;\r\n                    currentZoneMonster.hitpoint = Math.floor(creatureHitpoint - strPower);\r\n\r\n                    if(currentZoneMonster.hitpoint <= 0){\r\n                        currentZoneMonster.hitpoint = 0;\r\n                    }\r\n                }else if (attackElement == \"earth\" && creatureElement == \"water\"){\r\n                    //win benefit\r\n                    strPower = (attackPower*(1.10)) * currentUserInfo.strength;\r\n                    currentZoneMonster.hitpoint = Math.floor(creatureHitpoint - strPower);\r\n\r\n                    if(currentZoneMonster.hitpoint <= 0){\r\n                        currentZoneMonster.hitpoint = 0;\r\n                    }\r\n                }else if (attackElement == \"earth\" && creatureElement == \"wind\"){\r\n                    //lose benefit\r\n                    strPower = (attackPower*(.90)) * currentUserInfo.strength;\r\n                    currentZoneMonster.hitpoint = Math.floor(creatureHitpoint - strPower);\r\n\r\n                    if(currentZoneMonster.hitpoint <= 0){\r\n                        currentZoneMonster.hitpoint = 0;\r\n                    }\r\n                }else{\r\n                    //normal\r\n                    currentZoneMonster.hitpoint = Math.floor(creatureHitpoint - strPower);\r\n\r\n                    if(currentZoneMonster.hitpoint <= 0){\r\n                        currentZoneMonster.hitpoint = 0;\r\n                    }\r\n                }\r\n\r\n            }else if (currentCard.type == \"buff\"){\r\n                //buff\r\n                //not handle yet, we only have attack card here\r\n\r\n            }else {\r\n                //debuff\r\n                //not handle yet, we only have attack card here\r\n\r\n            }\r\n            setKeepTrackOfText(\"You use \"+ currentCard.cardname +\" and did \" + Math.floor(currentCard.attack * currentUserInfo.strength) + \" damages.\")\r\n            setShowText(true);\r\n            \r\n            setCurrentZone(currentZoneMonster);\r\n\r\n        }, 500)\r\n        setTimeout(function(){\r\n            setShowCard(false);\r\n            let currentCardSpliceOut =  currentCard;\r\n            setCurrentCardSelect(currentCard);\r\n            setShowCurrentCard();\r\n            //stop highlight the card in the upperDeck or lowerDeck\r\n            //console.log(\"currentCardSpliceOut:\", currentCardSpliceOut)\r\n            let currentUpperDeck = [...upperDeck];\r\n            let currentLowerDeck = [...lowerDeck];\r\n            let found = false;\r\n            for(let i =0; i < currentUpperDeck.length; i++){\r\n                //console.log(\"finding!\")\r\n                if(currentUpperDeck[i].id == currentCardSpliceOut.id){\r\n                    //console.log(\"found!\")\r\n                    currentUpperDeck[i].select = false;\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n            if(found == false){\r\n                for(let i =0; i < currentLowerDeck.length; i++){\r\n                    //console.log(\"finding!\")\r\n                    if(currentLowerDeck[i].id == currentCardSpliceOut.id){\r\n                        //console.log(\"found!\")\r\n                        currentLowerDeck[i].select = false;\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                } \r\n            }\r\n            \r\n            setUpperDeck(currentUpperDeck);\r\n            setLowerDeck(currentLowerDeck);\r\n            let newTurn = \"creature\";\r\n            setTurn(newTurn);\r\n            setAttacking(false);\r\n            let currentTurnCount = turnCount + 1;\r\n            setTurnCount(currentTurnCount)\r\n            isItMonsterTurn = true;\r\n            //console.log(\"monster:\", isItMonsterTurn)\r\n            setKeepTrackOfText(\"\")\r\n            setShowText(false);\r\n            //console.log(\"turn:\",turn)\r\n            //console.log(\"attack:\", attacking)\r\n        }, 2000)\r\n    }\r\n\r\n    function attack(){\r\n        //check if it's user turn\r\n        //console.log(turn)\r\n        if(turn == \"user\"){\r\n            //user can click\r\n            setShowDeck(false);\r\n            determineAttackingCard();\r\n            setAttacking(true);\r\n        }\r\n    \r\n    }\r\n    function skip(){\r\n        setShowDeck(false);\r\n    }\r\n\r\n    let id = useParams();\r\n    useEffect(() => {\r\n        let currentDeck = [];\r\n        let currentLowerDeck = [];\r\n        for(let i = 0; i < currentUserInfo.deck.length; i++){\r\n    \r\n            if(i <= 5){\r\n                currentDeck.push(currentUserInfo.deck[i]);\r\n            }else{\r\n                currentLowerDeck.push(currentUserInfo.deck[i]);\r\n            }\r\n        }\r\n        setUpperDeck(currentDeck);\r\n        setLowerDeck(currentLowerDeck);\r\n\r\n        for(let i = 0; i < zones.length; i++){\r\n            if(zones[i].battle == id.id){\r\n                setCurrentZone(zones[i]);\r\n                break;\r\n            }\r\n        }\r\n\r\n    },[])\r\n\r\n   \r\n\r\n\r\n  \r\n    return(\r\n        <div className=\"zonebattle\">\r\n            <div className=\"zonebattle__help\">\r\n                <div className=\"zonebattle__help__wrap\">\r\n                    <p className={showText ? \"zonebattle__help__wrap__text\" : \"zonebattle__help__wrap__text--hide\"}>{keepTrackOfText}</p>\r\n                </div>\r\n            </div>\r\n            <div className={win ? \"zonebattle__reward\" : \"zonebattle__reward--hide\"}>\r\n                <div className=\"zonebattle__reward__box\">\r\n                    <p className=\"zonebattle__reward__box__text\">VICTORY</p>\r\n                    {\r\n                        reward ? \r\n                            reward.map((item,index) => (\r\n                            <div key={index} className=\"zonebattle__reward__box__item\">\r\n                                <div className=\"zonebattle__reward__box__item__name\">\r\n                                    {item.name}\r\n                                </div>\r\n                                <div className=\"zonebattle__reward__box__item__x\">\r\n                                    X\r\n                                </div>\r\n                                <div className=\"zonebattle__reward__box__item__amount\">\r\n                                    {item.amount}\r\n                                </div>\r\n                            </div>\r\n                            ))\r\n                         : null\r\n                    }\r\n                    \r\n                 \r\n                    <div className=\"zonebattle__reward__box__buttons\">\r\n                        <Link to=\"/\" className=\"zonebattle__reward__box__buttons__home\">\r\n                            Home\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={currentUserInfo.hitpoint <= 0 ? \"zonebattle__reward\" : \"zonebattle__reward--hide\"}>\r\n                <div className=\"zonebattle__reward__box\">\r\n                    <p className=\"zonebattle__reward__box__text\">You died!</p>\r\n                    <div className=\"zonebattle__reward__box__buttons\">\r\n                        <Link to=\"/\" className=\"zonebattle__reward__box__buttons__home\">\r\n                            Home\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"zonebattle__top\">\r\n                <div className=\"zonebattle__top__title\">\r\n                    TURN {turnCount}\r\n                </div>\r\n                <Link to=\"/\" className=\"zonebattle__top__run\">\r\n                    RUN\r\n                </Link>\r\n            </div>\r\n            <div className=\"zonebattle__wrap\">\r\n                <div className={showDeck ? \"zonebattle__wrap__absolute\" : \"zonebattle__wrap__absolute zonebattle__wrap__absolute--hide \" }>\r\n                    <DisplayUpperDeck upperDeck={upperDeck} selectCard={selectCard} />\r\n                    <div className=\"zonebattle__wrap__actions\">\r\n                        \r\n                        <div onClick={() => skip()} className=\"zonebattle__wrap__actions__button\">\r\n                            CLOSE\r\n                        </div>\r\n                        <div onClick={() => skip()} className=\"zonebattle__wrap__actions__button\">\r\n                            SKIP\r\n                        </div>\r\n                        <div onClick={() => attack()} className=\"zonebattle__wrap__actions__button\">\r\n                            ATTACK\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"zonebattle__wrap__top\">\r\n                        {\r\n                            lowerDeck.length > 0 ? (\r\n                                lowerDeck.map((card) => (\r\n                                    <div key={card.id} className={card.select == true ? \"zonebattle__wrap__top__card zonebattle__wrap__top__card--select\":\"zonebattle__wrap__top__card\"}>\r\n                                        <div className=\"zonebattle__wrap__top__card__border\">\r\n                                            <div className=\"zonebattle__wrap__top__card__border__rarity rarity--white\">\r\n                                            \r\n                                            </div>\r\n                                            <div className=\"zonebattle__wrap__top__card__border__leftBox box--fire\">\r\n                                            \r\n                                            </div>\r\n                                            <div className=\"zonebattle__wrap__top__card__border__rightBox box--circle\">\r\n                                            \r\n                                            </div>\r\n                                            <div className=\"zonebattle__wrap__top__card__border__name\">\r\n                                                {card.cardname}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))\r\n                            ): null\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className={showDeck ? \"zonebattle__wrap__background--hide\": \"zonebattle__wrap__background\"}>\r\n                    <div className=\"zonebattle__wrap__background__background\">\r\n\r\n                    </div>\r\n                    <div className=\"zonebattle__wrap__background__standon\">\r\n\r\n                    </div>\r\n                    <div className=\"zonebattle__wrap__background__user\">\r\n                        <div className=\"zonebattle__wrap__background__user__card\">\r\n                            <div className=\"zonebattle__wrap__background__user__card__border\">\r\n                                <div className=\"zonebattle__wrap__background__user__card__border__rarity rarity--white\">\r\n                                \r\n                                </div>\r\n                                <div className=\"zonebattle__wrap__background__user__card__border__box\">\r\n                                    HP: {currentUserInfo.hitpoint}\r\n                                </div>\r\n                                <div className=\"zonebattle__wrap__background__user__card__border__box\">\r\n                                    MP: {currentUserInfo.manapoint}\r\n                                </div>\r\n                                <div className=\"zonebattle__wrap__background__user__card__border__box\">\r\n                                    STATUS EFFECTS: NONE\r\n                                </div>\r\n                                <div className=\"zonebattle__wrap__background__user__card__border__box\">\r\n                                  \r\n                                </div>\r\n                                <div className=\"zonebattle__wrap__background__user__card__border__box\">\r\n                                 \r\n                                </div>\r\n                                <div className=\"zonebattle__wrap__background__user__card__border__box user--name\">\r\n                                    SULLEN KITTEN\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"zonebattle__wrap__background__creature\">\r\n                        <div className=\"zonebattle__wrap__background__creature__card\">\r\n                            <div className=\"zonebattle__wrap__background__creature__card__border\">\r\n                                <div className=\"zonebattle__wrap__background__creature__card__border__rarity rarity--white\">\r\n\r\n                                </div>\r\n                                <div className=\"zonebattle__wrap__background__creature__card__border__box\">\r\n                                    HP: {currentZone.hitpoint}\r\n                                </div>\r\n                                <div className=\"zonebattle__wrap__background__creature__card__border__box\">\r\n                                    MP: {currentZone.manapoint}\r\n                                </div>\r\n                                <div className=\"zonebattle__wrap__background__creature__card__border__box\">\r\n                                    STATUS EFFECTS: NONE\r\n                                </div>\r\n                                <div className=\"zonebattle__wrap__background__creature__card__border__box\">\r\n                               \r\n                                </div>\r\n                                <div className=\"zonebattle__wrap__background__creature__card__border__box\">\r\n                               \r\n                                </div>\r\n                                <div className={\"zonebattle__wrap__background__creature__card__border__leftBox box--\"+currentZone.element}>\r\n\r\n                                </div>\r\n                                <div className={\"zonebattle__wrap__background__creature__card__border__rightBox box--\"+currentZone.type}>\r\n\r\n                                </div>\r\n                                <div className=\"zonebattle__wrap__background__creature__card__border__box creature--user\">\r\n                                    {currentZone.name}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={showCard ? \"zonebattle__wrap__background__card\" : \"zonebattle__wrap__background__card--hide\"}>\r\n                        {\r\n                            showCurrentCard ? (\r\n                                <div className=\"zonebattle__wrap__background__card__wrap\">\r\n                                    <div className=\"zonebattle__wrap__background__card__wrap__border\">\r\n                                        <div className=\"zonebattle__wrap__background__card__wrap__border__rarity rarity--white\">\r\n\r\n                                        </div>\r\n                                        <div className={\"zonebattle__wrap__background__card__wrap__border__leftBox box--\" + showCurrentCard.element}>\r\n\r\n                                        </div>\r\n                                        <div className={\"zonebattle__wrap__background__card__wrap__border__rightBox box--\"+showCurrentCard.type}>\r\n\r\n                                        </div>\r\n                                        <div className=\"zonebattle__wrap__background__card__wrap__border__name\">\r\n                                            {showCurrentCard.cardname}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ) : null\r\n                        }\r\n                        \r\n\r\n                    </div>\r\n                    <div className={showCreatureCard ? \"zonebattle__wrap__background__card zonebattle__wrap__background__card__creature--creature\": \"zonebattle__wrap__background__card zonebattle__wrap__background__card--hide\"}>\r\n                     \r\n                        {\r\n                            currentCardSelect ? (\r\n                                <div className=\"zonebattle__wrap__background__card__wrap\">\r\n                                    <div className=\"zonebattle__wrap__background__card__wrap__border\">\r\n                                        <div className=\"zonebattle__wrap__background__card__wrap__border__rarity rarity--white\">\r\n\r\n                                        </div>\r\n                                        <div className={\"zonebattle__wrap__background__card__wrap__border__leftBox box--\" + currentCardSelect.element}>\r\n\r\n                                        </div>\r\n                                        <div className={\"zonebattle__wrap__background__card__wrap__border__rightBox box--\"+ currentCardSelect.type}>\r\n\r\n                                        </div>\r\n                                        <div className=\"zonebattle__wrap__background__card__wrap__border__name\">\r\n                                            {currentCardSelect.name}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ) : null\r\n                        }\r\n\r\n                    </div>\r\n                    <div onClick={() => attacking == false ? turn == \"user\" ? setShowDeck(true) : null : null} className=\"zonebattle__wrap__background__deck\">\r\n                        <div className=\"zonebattle__wrap__background__deck__card\">\r\n                            <div className=\"zonebattle__wrap__background__deck__card__border\">\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Zonebattle;","\nimport React,{ useState, useEffect} from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nimport Camp from \"./components/Camp.js\";\nimport Npc from \"./components/Npc.js\";\nimport Bag from \"./components/Bag.js\";\nimport Status from \"./components/Status.js\";\nimport Zones from \"./components/Zones.js\";\nimport Tower from \"./components/Tower.js\";\nimport Zonebattle from \"./components/Zonebattle.js\";\n\n\nimport './App.css';\n\nimport UserContext from \"./state/UserContext.js\";\n\nfunction App() {\n    //default creation\n    //vitality * 10 = hp\n    //intelligence * 5 = MANA\n    // 1 sp = 1 increase in STR, VIT, OR INT\n    \n    const [userInfo, setUserInfo] = useState({\n        \"id\": 1,\n        \"name\": 'User Test #1',\n        \"level\": 1,\n        \"exp\": 0,\n        \"hitpoint\" : 100,\n        \"manapoint\": 50,\n        \"defense\": 15,\n        \"strength\": 10,\n        \"vitality\": 10,\n        \"intelligence\" : 10,\n        \"sp\": 0,\n        \"coins\": 10,\n        \"deck\": [\n            {\n                \"id\": 100,\n                \"cardname\": \"FIREBALL\",\n                \"attack\": 4.5,\n                \"effect\": [],\n                \"element\": \"fire\",\n                \"type\": \"attack\",\n                \"rarity\": \"white\",\n                \"select\": false\n            },\n            {\n                \"id\": 101,\n                \"cardname\": \"LAVA POOL\",\n                \"attack\": 3.5,\n                \"rarity\": \"white\",\n                \"effect\": [\n                    {\n                        \"name\" : \"Burning\",\n                        \"duration\": 5\n                    }\n                ],\n                \"element\": \"fire\",\n                \"type\": \"attack\",\n                \"select\": false\n            },\n            {\n                \"id\": 102,\n                \"cardname\": \"RAPID FIREBALL\",\n                \"attack\": 4.8,\n                \"rarity\": \"white\",\n                \"effect\": [],\n                \"element\": \"fire\",\n                \"type\": \"attack\",\n                \"select\": false\n            }     \n        ],\n        \"ownspells\": [\n            {\n                \"id\": 100,\n                \"cardname\": \"FIREBALL\",\n                \"attack\": 4.5,\n                \"rarity\": \"white\",\n                \"effect\": [],\n                \"element\": \"fire\",\n                \"type\": \"attack\"\n            },\n            {\n                \"id\": 101,\n                \"cardname\": \"LAVA POOL\",\n                \"attack\": 3.5,\n                \"rarity\": \"white\",\n                \"effect\": [\n                    {\n                        \"name\" : \"Burning\",\n                        \"duration\": 5\n                    }\n                ],\n                \"element\": \"fire\",\n                \"type\": \"attack\"\n            },\n            {\n                \"id\": 102,\n                \"cardname\": \"RAPID FIREBALL\",\n                \"attack\": 4.8,\n                \"rarity\": \"white\",\n                \"effect\": [],\n                \"element\": \"fire\",\n                \"type\": \"attack\"\n            } \n            \n        ],\n        \"equipeditems\":[\n            /*\n            {\n                \"id\": 300,\n                \"itemName\": \"name\",\n                \"strength\": 2.5,\n                \"vitality\": 1.5,\n                \"intelligence\": 2.5,\n                \"agility\": 1,\n                \"luck\": 2,\n                \"for\": \"weapon\"\n            }\n            */\n            \n        ],\n        \"bag\": [\n            /*\n            {\n                \"id\": 1000,\n                \"name\": \"Health Potion\",\n                \"hitpoint\": 200,\n                \"type\": \"heal\"  \n            }\n            */\n        ],\n        \"towerprogress\": {\n            \"highest\": 1\n        }\n    });\n\n    const [zones] = useState([\n        {\n            \"id\" : 10500,\n            \"name\": \"Wandering Ghost\",\n            \"battle\": 1,\n            \"zone\": \"d\",\n            \"element\": \"fire\",\n            \"type\": \"attack\",\n            \"hitpoint\": 150,\n            \"manapoint\": 150,\n            \"attack\": 50,\n            \"defense\": 30,\n            \"dodge\": 50,\n            \"skills\":[\n                {\n                    \"id\": 555,\n                    \"name\": \"CLAW\",\n                    \"element\": \"fire\",\n                    \"type\": \"attack\",\n                    \"attackPower\": 15,\n                    \"cooldown\": 1, \n                    \"select\": false\n                }\n            ],\n            \"rewards\": [\n                {\n                    \"percentage\": 100,\n                    \"type\": \"exp\",\n                    \"name\" : \"EXP\",\n                    \"amount\": 30,\n                },\n                {\n                    \"percentage\": 100,\n                    \"type\": \"currency\",\n                    \"name\" : \"COIN\",\n                    \"amount\": 100,\n                },\n                {\n                    \"percentage\": 80,\n                    \"type\": \"item\",\n                    \"name\" : \"VEIL\",\n                    \"amount\": 1,\n                },\n                {\n                    \"percentage\": 10,\n                    \"type\": \"card\",\n                    \"rarity\": \"blue\",\n                    \"cardType\": \"buff\",\n                    \"cardElement\": \"light\",\n                    \"cardAttack\": 2.5,\n                    \"name\" : \"HEAL\",\n                    \"amount\": 1,\n                },\n                {\n                    \"percentage\": 0.001,\n                    \"type\": \"card\",\n                    \"rarity\": \"blue\",\n                    \"cardType\": \"buff\",\n                    \"cardElement\": \"light\",\n                    \"cardAttack\": 3.5,\n                    \"name\" : \"HEALTH BOOST\",\n                    \"amount\": 1,\n                }\n            ]\n        },\n        {\n            \"id\" : 10501,\n            \"name\": \"WOLF'S DEN\",\n            \"battle\": 2,\n            \"zone\": \"d\",\n            \"element\": \"fire\",\n            \"type\": \"attack\",\n            \"hitpoint\": 300,\n            \"manapoint\": 100,\n            \"attack\": 50,\n            \"defense\": 30,\n            \"dodge\": 50,\n            \"skills\":[\n                {\n                    \"id\": 556,\n                    \"name\": \"BITE\",\n                    \"mana\": 25,\n                    \"element\": \"fire\",\n                    \"type\": \"attack\",\n                    \"attackPower\": 30,\n                    \"cooldown\": 1, \n                    \"select\": false\n                }\n            ],\n            \"rewards\": [\n                {\n                    \"percentage\": 100,\n                    \"type\": \"exp\",\n                    \"name\" : \"EXP\",\n                    \"amount\": 60,\n                },\n                {\n                    \"percentage\": 100,\n                    \"type\": \"currency\",\n                    \"name\" : \"COIN\",\n                    \"amount\": 200,\n                },\n                {\n                    \"percentage\": 80,\n                    \"type\": \"item\",\n                    \"name\" : \"Tiger's Hide\",\n                    \"amount\": 1,\n                },\n                {\n                    \"percentage\": 10,\n                    \"type\": \"card\",\n                    \"rarity\": \"blue\",\n                    \"cardType\": \"attack\",\n                    \"cardElement\": \"wind\",\n                    \"cardAttack\": 5.5,\n                    \"name\" : \"WIND STRIKE\",\n                    \"amount\": 1,\n                },\n                {\n                    \"percentage\": 10,\n                    \"type\": \"card\",\n                    \"rarity\": \"blue\",\n                    \"cardType\": \"attack\",\n                    \"cardElement\": \"wind\",\n                    \"cardAttack\": 6,\n                    \"name\" : \"WHIRLWIND\",\n                    \"amount\": 1,\n                },\n                {\n                    \"percentage\": 0.001,\n                    \"type\": \"card\",\n                    \"rarity\": \"blue\",\n                    \"cardType\": \"buff\",\n                    \"cardElement\": \"light\",\n                    \"cardAttack\": 3.5,\n                    \"name\" : \"ATTACK INCREASE\",\n                    \"amount\": 1,\n                }\n            ]\n        },\n        {\n            \"id\" : 10502,\n            \"name\": \"IRON TOOTH BOAR\",\n            \"battle\": 3,\n            \"zone\": \"d\",\n            \"element\": \"fire\",\n            \"type\": \"attack\",\n            \"hitpoint\": 600,\n            \"manapoint\": 150,\n            \"attack\": 50,\n            \"defense\": 30,\n            \"dodge\": 50,\n            \"skills\":[\n                {\n                    \"id\": 556,\n                    \"name\": \"RUN IN\",\n                    \"mana\": 25,\n                    \"element\": \"fire\",\n                    \"type\": \"attack\",\n                    \"attackPower\": 60,\n                    \"cooldown\": 1, \n                    \"select\": false\n                }\n            ],\n            \"rewards\": [\n                {\n                    \"percentage\": 100,\n                    \"type\": \"exp\",\n                    \"name\" : \"EXP\",\n                    \"amount\": 120,\n                },\n                {\n                    \"percentage\": 100,\n                    \"type\": \"currency\",\n                    \"name\" : \"COIN\",\n                    \"amount\": 300,\n                },\n                {\n                    \"percentage\": 80,\n                    \"type\": \"item\",\n                    \"name\" : \"IRON TOOTH FROM BOAR\",\n                    \"amount\": 1,\n                },\n                {\n                    \"percentage\": 10,\n                    \"type\": \"card\",\n                    \"rarity\": \"blue\",\n                    \"cardType\": \"attack\",\n                    \"cardElement\": \"wind\",\n                    \"cardAttack\": 5.5,\n                    \"name\" : \"TORNADO\",\n                    \"amount\": 1,\n                },\n                {\n                    \"percentage\": 0.001,\n                    \"type\": \"card\",\n                    \"rarity\": \"blue\",\n                    \"cardType\": \"buff\",\n                    \"cardElement\": \"light\",\n                    \"cardAttack\": 3.5,\n                    \"name\" : \"ATTACK INCREASE\",\n                    \"amount\": 1,\n                }\n            ]\n        },\n        {\n            \"id\" : 10503,\n            \"name\": \"DEMON TREE'S BRANCH\",\n            \"battle\": 4,\n            \"zone\": \"d\",\n            \"element\": \"earth\",\n            \"type\": \"attack\",\n            \"hitpoint\": 800,\n            \"manapoint\": 150,\n            \"attack\": 50,\n            \"defense\": 30,\n            \"dodge\": 50,\n            \"skills\":[\n                {\n                    \"id\": 556,\n                    \"name\": \"WHIP\",\n                    \"mana\": 25,\n                    \"element\": \"earth\",\n                    \"type\": \"attack\",\n                    \"attackPower\": 70,\n                    \"cooldown\": 1, \n                    \"select\": false\n                }\n            ],\n            \"rewards\": [\n                {\n                    \"percentage\": 100,\n                    \"type\": \"exp\",\n                    \"name\" : \"EXP\",\n                    \"amount\": 240,\n                },\n                {\n                    \"percentage\": 100,\n                    \"type\": \"currency\",\n                    \"name\" : \"COIN\",\n                    \"amount\": 500,\n                },\n                {\n                    \"percentage\": 80,\n                    \"type\": \"item\",\n                    \"name\" : \"DEMON TREE'S LEAF\",\n                    \"amount\": 1,\n                },\n                {\n                    \"percentage\": 10,\n                    \"type\": \"card\",\n                    \"rarity\": \"blue\",\n                    \"cardType\": \"attack\",\n                    \"cardElement\": \"earth\",\n                    \"cardAttack\": 5.5,\n                    \"name\" : \"EARTH'S SPIKE\",\n                    \"amount\": 1,\n                },\n                {\n                    \"percentage\": 0.001,\n                    \"type\": \"card\",\n                    \"rarity\": \"blue\",\n                    \"cardType\": \"buff\",\n                    \"cardElement\": \"light\",\n                    \"cardAttack\": 3.5,\n                    \"name\" : \"ATTACK INCREASE\",\n                    \"amount\": 1,\n                }\n            ]\n        },\n        {\n            \"id\" : 10504,\n            \"name\": \"EARTH'S DEMON\",\n            \"battle\": 5,\n            \"zone\": \"d\",\n            \"element\": \"earth\",\n            \"type\": \"attack\",\n            \"hitpoint\": 900,\n            \"manapoint\": 150,\n            \"attack\": 50,\n            \"defense\": 30,\n            \"dodge\": 50,\n            \"skills\":[\n                {\n                    \"id\": 556,\n                    \"name\": \"WHIP\",\n                    \"mana\": 25,\n                    \"element\": \"earth\",\n                    \"type\": \"attack\",\n                    \"attackPower\": 80,\n                    \"cooldown\": 1, \n                    \"select\": false\n                }\n            ],\n            \"rewards\": [\n                {\n                    \"percentage\": 100,\n                    \"type\": \"exp\",\n                    \"name\" : \"EXP\",\n                    \"amount\": 480,\n                },\n                {\n                    \"percentage\": 100,\n                    \"type\": \"currency\",\n                    \"name\" : \"COIN\",\n                    \"amount\": 600,\n                },\n                {\n                    \"percentage\": 80,\n                    \"type\": \"item\",\n                    \"name\" : \"DEMON'S BLOOD\",\n                    \"amount\": 1,\n                },\n                {\n                    \"percentage\": 10,\n                    \"type\": \"card\",\n                    \"rarity\": \"blue\",\n                    \"cardType\": \"attack\",\n                    \"cardElement\": \"earth\",\n                    \"cardAttack\": 5.5,\n                    \"name\" : \"ERUPTION\",\n                    \"amount\": 1,\n                },\n                {\n                    \"percentage\": 0.001,\n                    \"type\": \"card\",\n                    \"rarity\": \"blue\",\n                    \"cardType\": \"buff\",\n                    \"cardElement\": \"light\",\n                    \"cardAttack\": 3.5,\n                    \"name\" : \"ATTACK INCREASE\",\n                    \"amount\": 1,\n                }\n            ]\n        },\n        {\n            \"id\" : 10505,\n            \"name\": \"MUD MONSTER\",\n            \"battle\": 6,\n            \"zone\": \"d\",\n            \"element\": \"earth\",\n            \"type\": \"attack\",\n            \"hitpoint\": 1000,\n            \"manapoint\": 150,\n            \"attack\": 50,\n            \"defense\": 30,\n            \"dodge\": 50,\n            \"skills\":[\n                {\n                    \"id\": 556,\n                    \"name\": \"WHIP\",\n                    \"mana\": 25,\n                    \"element\": \"earth\",\n                    \"type\": \"attack\",\n                    \"attackPower\": 90,\n                    \"cooldown\": 1, \n                    \"select\": false\n                }\n            ],\n            \"rewards\": [\n                {\n                    \"percentage\": 100,\n                    \"type\": \"exp\",\n                    \"name\" : \"EXP\",\n                    \"amount\": 960,\n                },\n                {\n                    \"percentage\": 100,\n                    \"type\": \"currency\",\n                    \"name\" : \"COIN\",\n                    \"amount\": 700,\n                },\n                {\n                    \"percentage\": 80,\n                    \"type\": \"item\",\n                    \"name\" : \"DEMON'S TEAR\",\n                    \"amount\": 1,\n                },\n                {\n                    \"percentage\": 10,\n                    \"type\": \"card\",\n                    \"rarity\": \"blue\",\n                    \"cardType\": \"attack\",\n                    \"cardElement\": \"earth\",\n                    \"cardAttack\": 5.5,\n                    \"name\" : \"GOLEM'S FIST STRIKE\",\n                    \"amount\": 1,\n                },\n                {\n                    \"percentage\": 0.001,\n                    \"type\": \"card\",\n                    \"rarity\": \"blue\",\n                    \"cardType\": \"buff\",\n                    \"cardElement\": \"light\",\n                    \"cardAttack\": 3.5,\n                    \"name\" : \"ATTACK INCREASE\",\n                    \"amount\": 1,\n                }\n            ]\n        },\n        {\n            \"id\" : 10506,\n            \"name\": \"CORRUPTED WITCH\",\n            \"battle\": 7,\n            \"zone\": \"d\",\n            \"element\": \"water\",\n            \"type\": \"attack\",\n            \"hitpoint\": 1200,\n            \"manapoint\": 150,\n            \"attack\": 50,\n            \"defense\": 30,\n            \"dodge\": 50,\n            \"skills\":[\n                {\n                    \"id\": 556,\n                    \"name\": \"CURSE\",\n                    \"mana\": 25,\n                    \"element\": \"water\",\n                    \"type\": \"attack\",\n                    \"attackPower\": 100,\n                    \"cooldown\": 1, \n                    \"select\": false\n                }\n            ],\n            \"rewards\": [\n                {\n                    \"percentage\": 100,\n                    \"type\": \"exp\",\n                    \"name\" : \"EXP\",\n                    \"amount\": 1920,\n                },\n                {\n                    \"percentage\": 100,\n                    \"type\": \"currency\",\n                    \"name\" : \"COIN\",\n                    \"amount\": 1000,\n                },\n                {\n                    \"percentage\": 80,\n                    \"type\": \"item\",\n                    \"name\" : \"WITCH'S NOTEBOOK\",\n                    \"amount\": 1,\n                },\n                {\n                    \"percentage\": 10,\n                    \"type\": \"card\",\n                    \"rarity\": \"blue\",\n                    \"cardType\": \"attack\",\n                    \"cardElement\": \"water\",\n                    \"cardAttack\": 5.5,\n                    \"name\" : \"WATER BLAST\",\n                    \"amount\": 1,\n                },\n                {\n                    \"percentage\": 0.001,\n                    \"type\": \"card\",\n                    \"rarity\": \"blue\",\n                    \"cardType\": \"buff\",\n                    \"cardElement\": \"light\",\n                    \"cardAttack\": 3.5,\n                    \"name\" : \"ATTACK INCREASE\",\n                    \"amount\": 1,\n                }\n            ]\n        },\n        {\n            \"id\" : 10507,\n            \"name\": \"THE FOREST\",\n            \"battle\": 8,\n            \"zone\": \"d\",\n            \"element\": \"water\",\n            \"type\": \"attack\",\n            \"hitpoint\": 1400,\n            \"manapoint\": 150,\n            \"attack\": 50,\n            \"defense\": 30,\n            \"dodge\": 50,\n            \"skills\":[\n                {\n                    \"id\": 556,\n                    \"name\": \"SCREAM\",\n                    \"mana\": 25,\n                    \"element\": \"water\",\n                    \"type\": \"attack\",\n                    \"attackPower\": 110,\n                    \"cooldown\": 1, \n                    \"select\": false\n                }\n            ],\n            \"rewards\": [\n                {\n                    \"percentage\": 100,\n                    \"type\": \"exp\",\n                    \"name\" : \"EXP\",\n                    \"amount\": 3840,\n                },\n                {\n                    \"percentage\": 100,\n                    \"type\": \"currency\",\n                    \"name\" : \"COIN\",\n                    \"amount\": 1100,\n                },\n                {\n                    \"percentage\": 80,\n                    \"type\": \"item\",\n                    \"name\" : \"THE FOREST'S MAP\",\n                    \"amount\": 1,\n                },\n                {\n                    \"percentage\": 10,\n                    \"type\": \"card\",\n                    \"rarity\": \"blue\",\n                    \"cardType\": \"attack\",\n                    \"cardElement\": \"water\",\n                    \"cardAttack\": 5.5,\n                    \"name\" : \"FROZEN FIST\",\n                    \"amount\": 1,\n                },\n                {\n                    \"percentage\": 0.001,\n                    \"type\": \"card\",\n                    \"rarity\": \"blue\",\n                    \"cardType\": \"buff\",\n                    \"cardElement\": \"light\",\n                    \"cardAttack\": 3.5,\n                    \"name\" : \"ATTACK INCREASE\",\n                    \"amount\": 1,\n                }\n            ]\n        },\n        {\n            \"id\" : 10508,\n            \"name\": \"ROUGE MAGE\",\n            \"battle\": 9,\n            \"zone\": \"d\",\n            \"element\": \"water\",\n            \"type\": \"attack\",\n            \"hitpoint\": 1500,\n            \"manapoint\": 150,\n            \"attack\": 50,\n            \"defense\": 30,\n            \"dodge\": 50,\n            \"skills\":[\n                {\n                    \"id\": 556,\n                    \"name\": \"WATER BLAST\",\n                    \"mana\": 25,\n                    \"element\": \"water\",\n                    \"type\": \"attack\",\n                    \"attackPower\": 120,\n                    \"cooldown\": 1, \n                    \"select\": false\n                }\n            ],\n            \"rewards\": [\n                {\n                    \"percentage\": 100,\n                    \"type\": \"exp\",\n                    \"name\" : \"EXP\",\n                    \"amount\": 7680,\n                },\n                {\n                    \"percentage\": 100,\n                    \"type\": \"currency\",\n                    \"name\" : \"COIN\",\n                    \"amount\": 1200,\n                },\n                {\n                    \"percentage\": 80,\n                    \"type\": \"item\",\n                    \"name\" : \"MAGE'S PENDANT\",\n                    \"amount\": 1,\n                },\n                {\n                    \"percentage\": 10,\n                    \"type\": \"card\",\n                    \"rarity\": \"blue\",\n                    \"cardType\": \"attack\",\n                    \"cardElement\": \"water\",\n                    \"cardAttack\": 5.5,\n                    \"name\" : \"ICE SPEAR\",\n                    \"amount\": 1,\n                },\n                {\n                    \"percentage\": 0.001,\n                    \"type\": \"card\",\n                    \"rarity\": \"blue\",\n                    \"cardType\": \"buff\",\n                    \"cardElement\": \"light\",\n                    \"cardAttack\": 3.5,\n                    \"name\" : \"ATTACK INCREASE\",\n                    \"amount\": 1,\n                }\n            ]\n        }\n    ]);\n\n    /*\n    useEffect(() => {\n        let tryToGetLocalStorage = JSON.parse(localStorage.getItem(\"userInfo\"));\n        console.log(\"what\", tryToGetLocalStorage);\n        if(tryToGetLocalStorage && tryToGetLocalStorage.length > 0){\n            console.log(\"Oh we already have it!\")\n            setUserInfo(tryToGetLocalStorage[0]);\n        }else{\n            console.log(\"We don't have one!\")\n            localStorage.setItem('userInfo', JSON.stringify([{\n                \"id\": 1,\n                \"name\": 'SULLEN KITTEN',\n                \"level\": 1,\n                \"exp\": 0,\n                \"hitpoint\" : 100,\n                \"manapoint\": 50,\n                \"defense\": 15,\n                \"strength\": 10,\n                \"vitality\": 10,\n                \"intelligence\" : 10,\n                \"sp\": 0,\n                \"coins\": 10,\n                \"deck\": [\n                    {\n                        \"id\": 100,\n                        \"cardname\": \"FIREBALL\",\n                        \"attack\": 4.5,\n                        \"effect\": [],\n                        \"element\": \"fire\",\n                        \"type\": \"attack\",\n                        \"rarity\": \"white\",\n                        \"select\": false\n                    },\n                    {\n                        \"id\": 101,\n                        \"cardname\": \"LAVA POOL\",\n                        \"attack\": 3.5,\n                        \"rarity\": \"white\",\n                        \"effect\": [\n                            {\n                                \"name\" : \"Burning\",\n                                \"duration\": 5\n                            }\n                        ],\n                        \"element\": \"fire\",\n                        \"type\": \"attack\",\n                        \"select\": false\n                    },\n                    {\n                        \"id\": 102,\n                        \"cardname\": \"RAPID FIREBALL\",\n                        \"attack\": 4.8,\n                        \"rarity\": \"white\",\n                        \"effect\": [],\n                        \"element\": \"fire\",\n                        \"type\": \"attack\",\n                        \"select\": false\n                    }     \n                ],\n                \"ownspells\": [\n                    {\n                        \"id\": 100,\n                        \"cardname\": \"FIREBALL\",\n                        \"attack\": 4.5,\n                        \"rarity\": \"white\",\n                        \"effect\": [],\n                        \"element\": \"fire\",\n                        \"type\": \"attack\"\n                    },\n                    {\n                        \"id\": 101,\n                        \"cardname\": \"LAVA POOL\",\n                        \"attack\": 3.5,\n                        \"rarity\": \"white\",\n                        \"effect\": [\n                            {\n                                \"name\" : \"Burning\",\n                                \"duration\": 5\n                            }\n                        ],\n                        \"element\": \"fire\",\n                        \"type\": \"attack\"\n                    },\n                    {\n                        \"id\": 102,\n                        \"cardname\": \"RAPID FIREBALL\",\n                        \"attack\": 4.8,\n                        \"rarity\": \"white\",\n                        \"effect\": [],\n                        \"element\": \"fire\",\n                        \"type\": \"attack\"\n                    } \n                    \n                ],\n                \"equipeditems\":[\n                  \n                    {\n                        \"id\": 300,\n                        \"itemName\": \"name\",\n                        \"strength\": 2.5,\n                        \"vitality\": 1.5,\n                        \"intelligence\": 2.5,\n                        \"agility\": 1,\n                        \"luck\": 2,\n                        \"for\": \"weapon\"\n                    }\n                    \n                    \n                ],\n                \"bag\": [\n                  \n                    {\n                        \"id\": 1000,\n                        \"name\": \"Health Potion\",\n                        \"hitpoint\": 200,\n                        \"type\": \"heal\"  \n                    }\n                    \n                ],\n                \"towerprogress\": {\n                    \"highest\": 1\n            }}]));\n        }\n        console.log(\"go through me 1\")\n    }, [])\n    */\n\n    const userState = useState({\n        \"id\": 1,\n        \"name\": 'Alpha Tester #1',\n        \"level\": 1,\n        \"exp\": 0,\n        \"hitpoint\" : 100,\n        \"manapoint\": 50,\n        \"defense\": 15,\n        \"strength\": 10,\n        \"vitality\": 10,\n        \"intelligence\" : 10,\n        \"sp\": 0,\n        \"coins\": 10,\n        \"deck\": [\n            {\n                \"id\": 100,\n                \"cardname\": \"FIREBALL\",\n                \"attack\": 4.5,\n                \"effect\": [],\n                \"element\": \"fire\",\n                \"type\": \"attack\",\n                \"rarity\": \"white\",\n                \"select\": false\n            },\n            {\n                \"id\": 101,\n                \"cardname\": \"LAVA POOL\",\n                \"attack\": 3.5,\n                \"rarity\": \"white\",\n                \"effect\": [\n                    {\n                        \"name\" : \"Burning\",\n                        \"duration\": 5\n                    }\n                ],\n                \"element\": \"fire\",\n                \"type\": \"attack\",\n                \"select\": false\n            },\n            {\n                \"id\": 102,\n                \"cardname\": \"RAPID FIREBALL\",\n                \"attack\": 4.8,\n                \"rarity\": \"white\",\n                \"effect\": [],\n                \"element\": \"fire\",\n                \"type\": \"attack\",\n                \"select\": false\n            }     \n        ],\n        \"ownspells\": [\n            {\n                \"id\": 100,\n                \"cardname\": \"FIREBALL\",\n                \"attack\": 4.5,\n                \"rarity\": \"white\",\n                \"effect\": [],\n                \"element\": \"fire\",\n                \"type\": \"attack\"\n            },\n            {\n                \"id\": 101,\n                \"cardname\": \"LAVA POOL\",\n                \"attack\": 3.5,\n                \"rarity\": \"white\",\n                \"effect\": [\n                    {\n                        \"name\" : \"Burning\",\n                        \"duration\": 5\n                    }\n                ],\n                \"element\": \"fire\",\n                \"type\": \"attack\"\n            },\n            {\n                \"id\": 102,\n                \"cardname\": \"RAPID FIREBALL\",\n                \"attack\": 4.8,\n                \"rarity\": \"white\",\n                \"effect\": [],\n                \"element\": \"fire\",\n                \"type\": \"attack\"\n            } \n            \n        ],\n        \"equipeditems\":[\n            /*\n            {\n                \"id\": 300,\n                \"itemName\": \"name\",\n                \"strength\": 2.5,\n                \"vitality\": 1.5,\n                \"intelligence\": 2.5,\n                \"agility\": 1,\n                \"luck\": 2,\n                \"for\": \"weapon\"\n            }\n            */\n            \n        ],\n        \"bag\": [\n            /*\n            {\n                \"id\": 1000,\n                \"name\": \"Health Potion\",\n                \"hitpoint\": 200,\n                \"type\": \"heal\"  \n            }\n            */\n        ],\n        \"towerprogress\": {\n            \"highest\": 1\n        }\n    });\n    \n    let tryToGetLocalStorage = JSON.parse(localStorage.getItem(\"userInfo\"));\n    //run it once\n    useEffect(() => {\n        if(tryToGetLocalStorage == null){\n            //console.log(\"1\",tryToGetLocalStorage)\n            localStorage.setItem(\"userInfo\", JSON.stringify((userInfo)))\n        }else{\n            //console.log(\"2\",tryToGetLocalStorage)\n            userState[1](tryToGetLocalStorage)\n        }\n    }, [])\n\n    \n    return(\n        <Router>\n            <UserContext.Provider value={userState}>\n                <div className=\"App\" >\n                    <Switch>\n                        <Route path=\"/npc\">\n                            <Npc />\n                        </Route>\n                        <Route path=\"/bag\">\n                            <Bag />\n                        </Route>\n                        <Route path=\"/status\">\n                            <Status  />\n                        </Route>\n                        <Route exact path=\"/zones\">\n                            <Zones />\n                        </Route>\n                        <Route path=\"/zones/:id\">\n                            <Zonebattle zones={zones}/>\n                        </Route>\n                        <Route path=\"/tower\">\n                            <Tower />\n                        </Route>\n                        {/*do not use exact here, otherwise gitpage will not find the home page,,,,, so silly*/}\n                        <Route path=\"/\">\n                            <Camp />\n                        </Route>\n                    </Switch>\n                </div>\n            </UserContext.Provider>\n        </Router>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}